// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SysLibraryWeb.Data;

namespace SysLibraryWeb.Migrations
{
    [DbContext(typeof(LendingInfoDbContext))]
    partial class LendingInfoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SysLibraryWeb.Models.AppointmentOrLending", b =>
                {
                    b.Property<string>("BookId");

                    b.Property<string>("StudentId");

                    b.Property<DateTime?>("AppointingDateTime");

                    b.HasKey("BookId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("AppointmentOrLendings");
                });

            modelBuilder.Entity("SysLibraryWeb.Models.Book", b =>
                {
                    b.Property<string>("BarCode")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AppointedLatestTime");

                    b.Property<int>("BookshelfId");

                    b.Property<DateTime?>("BorrowTime");

                    b.Property<string>("FetchBookNumber");

                    b.Property<string>("ISBN");

                    b.Property<string>("KeeperId");

                    b.Property<string>("Location");

                    b.Property<DateTime?>("MatureTime");

                    b.Property<string>("Name");

                    b.Property<string>("Sort");

                    b.Property<int>("State");

                    b.HasKey("BarCode");

                    b.HasIndex("BookshelfId");

                    b.HasIndex("KeeperId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("SysLibraryWeb.Models.BookDetails", b =>
                {
                    b.Property<string>("ISBN")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("FetchBookNumber")
                        .IsRequired();

                    b.Property<byte[]>("ImageData");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Press")
                        .IsRequired();

                    b.Property<DateTime>("PublishDateTime");

                    b.Property<string>("SoundCassettes");

                    b.Property<int>("Version");

                    b.HasKey("ISBN");

                    b.ToTable("BookDetail");
                });

            modelBuilder.Entity("SysLibraryWeb.Models.Bookshelf", b =>
                {
                    b.Property<int>("BookshelfId");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("MaxFetchNumber")
                        .IsRequired();

                    b.Property<string>("MinFetchNumber")
                        .IsRequired();

                    b.Property<string>("Sort")
                        .IsRequired();

                    b.HasKey("BookshelfId");

                    b.ToTable("Bookshelves");
                });

            modelBuilder.Entity("SysLibraryWeb.Models.RecommendedBook", b =>
                {
                    b.Property<string>("ISBN")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Press")
                        .IsRequired();

                    b.Property<DateTime>("PublishDateTime");

                    b.Property<string>("SoundCassettes");

                    b.Property<int>("Version");

                    b.HasKey("ISBN");

                    b.ToTable("RecommendedBooks");
                });

            modelBuilder.Entity("SysLibraryWeb.Models.StudentInfo", b =>
                {
                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppointingBookBarCode");

                    b.Property<int>("Degree");

                    b.Property<decimal>("Fine");

                    b.Property<int>("MaxBooksNumber");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(14);

                    b.HasKey("UserName");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("SysLibraryWeb.Models.AppointmentOrLending", b =>
                {
                    b.HasOne("SysLibraryWeb.Models.Book", "Book")
                        .WithMany("Appointments")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SysLibraryWeb.Models.StudentInfo", "Student")
                        .WithMany("KeepingBooks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SysLibraryWeb.Models.Book", b =>
                {
                    b.HasOne("SysLibraryWeb.Models.Bookshelf", "Bookshelf")
                        .WithMany("Books")
                        .HasForeignKey("BookshelfId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SysLibraryWeb.Models.StudentInfo", "Keeper")
                        .WithMany()
                        .HasForeignKey("KeeperId");
                });
#pragma warning restore 612, 618
        }
    }
}
